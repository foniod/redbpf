image: &default_image quay.io/redsift/ingraind-build:latest

version: 2.1
commands:
  install_rust:
    steps:
      - run:
          name: Install rust
          command: |
            curl --proto '=https' --tlsv1.2 -sSf -o rustup.sh https://sh.rustup.rs
            chmod 755 rustup.sh
            ./rustup.sh -y
            . /root/.cargo/env
            cat /root/.cargo/env >> $BASH_ENV
            rustup default nightly
            rustup target add x86_64-unknown-linux-musl
            rustup component add rustfmt

  setup_ubuntu_env:
    parameters:
      tag:
        type: string
        default: "latest"
      kernel_version:
        type: string
        default: "$(uname -r)"
    steps:
      - run:
          name: Install some deps
          command: |
            apt-get update
            apt-get install -y curl wget gnupg2 software-properties-common lsb-release git
            echo "export DEBIAN_FRONTEND=noninteractive" >> $BASH_ENV

      - checkout
      - run: git submodule sync
      - run: git submodule update --init

      - run:
          name: Configure llvm 9 repo
          command: |
            curl https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
            add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-9  main'

      - run:
          name: Install more deps
          command: |
            apt-get update
            apt-get install -y clang llvm-9 libelf-dev linux-headers-<< parameters.kernel_version >> ca-certificates{,-java} libssl-dev pkg-config s3cmd

      - install_rust

      - run:
          name: Set env vars
          command: |
            cargo install sccache
            echo "export KERNEL_VERSION=<< parameters.kernel_version >>" >> $BASH_ENV
            echo "export RUSTC_WRAPPER=/root/.cargo/bin/sccache" >> $BASH_ENV
            echo "export SCCACHE_BUCKET=ingrain-sccache" >> $BASH_ENV

jobs:
  build_ubuntu:
    parameters:
      tag:
        type: string
        default: "latest"
      kernel_version:
        type: string
        default: "$(uname -r)"
    working_directory: /build
    docker:
      - image: ubuntu:<< parameters.tag >>
    steps:
      - setup_ubuntu_env:
          tag: << parameters.tag >>
          kernel_version: << parameters.kernel_version >>
      - run:
          name: Build
          command: |
            cargo build
            cargo test --bins --tests
            RUSTDOCFLAGS="-C panic=abort" cargo test --doc --workspace src
            cargo doc --no-deps

  publish:
    docker:
      - image: *default_image
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: Publish package
          command: |
            rustup default nightly
            git config --global url."https://$GITHUB_HTTP_TOKEN:@github.com".insteadOf "https://github.com"
            cargo login $CRATES_KEY
            for package in bpf-sys redbpf{,-macros,-probes} cargo-bpf; do
              pushd $package
              cargo publish || true
              popd
              sleep 5
            done

            cargo doc --no-deps --release

            git config --global user.email "team@redsift.com"
            git config --global user.name "CircleCI bot"
            git clone https://$GITHUB_HTTP_TOKEN:@github.com/redsift/ingraind.org publish
            rm -rf publish/api/
            mkdir -p publish/api/
            cp -r target/doc/* publish/api/
            cd publish
            git add *
            git commit -a -m '[CI] Update redbpf docs'
            git push

workflows:
  version: 2
  build_publish:
    jobs:
      - build_ubuntu:
          context: org-global
          name: "ubuntu 18.04"
          tag: "18.04"
          filters:
            tags:
              only: /.*/
      - build_ubuntu:
          context: org-global
          name: "ubuntu 19.04"
          tag: "19.04"
          kernel_version: "5.0.0-38-generic"
          filters:
            tags:
              only: /.*/
      - publish:
          context: org-global
          requires:
            - "ubuntu 18.04"
            - "ubuntu 19.04"
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
